@using System.Diagnostics.CodeAnalysis
@using BlazorMonaco;
@using BlazorMonaco.Editor;

@inherits BaseComponent
<div class="editor-wrapper">
<StandaloneCodeEditor @ref="_editor" CssClass="code-editor" ConstructionOptions="AppProjData.FnPgsqlOtion"
OnKeyDown="OnKeyDown" 
OnDidInit="OnEditorInit"
/>
<a class="copy-button" @onclick="CopyTextToClipboard"><i class="bi bi-copy"></i></a>
</div>

<style>
  .editor-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .copy-button {
    position: absolute;
    top: 10px;
    right: 20px;
    z-index: 10;
    color: white;
    border: none;
    padding: 3px 6px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.9rem;
  }

  .copy-button:hover {
   background-color: #007bff;
  }
  </style>


@code {
   StandaloneCodeEditor? _editor;

   
  [Parameter] public EventCallback<KeyboardEvent> KeyDownEvent { get; set; }

  //public delegate Task CommandHandler();

  private async Task OnEditorInit()
{
    // Ctrl+Enter 단축키 등록
    


        await _editor.AddCommand((int)KeyMod.CtrlCmd | (int)KeyCode.Enter, (editor, keyCode) =>
        {
            Console.WriteLine("Ctrl+Enter : Editor command is triggered.");
        });
}




  protected async Task OnKeyDown(KeyboardEvent e) {

    KeyDownEvent.InvokeAsync(e);

  }


  public async Task<string> GetValue() {
    string editorValue = await _editor.GetValue();
    return editorValue;
  }

  public async Task SetValue(string value) {
    _editor.SetValue(value);
  }

  private async Task CopyTextToClipboard() {
    var str = await _editor.GetValue();
    await jsRuntime.InvokeVoidAsync("copyClipboard", str);

    Notify(NotificationSeverity.Success, "알림", "Copyed !!", 2*1000, false);

  }


}
