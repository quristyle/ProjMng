@page "/glue";
@{ 
  /* description : 글루 process 추적기
   * title : 글루 추적기
  * sort : 1
  * credt : 2025-07-01
  * author : quristyle
  */
}

@inherits PageBaseComponent

<RadzenCard >
  <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" >

    
    
    <QuriSearchs>
      <QuriDropDown @bind-Value="projectName" CodeId="projlist" />
      <QuriDropDown @bind-Value="SrouceName" CodeId="sourcelist" Etc0=@projectName?.Code />
    </QuriSearchs>


    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="4px">
      <RadzenButton Click="@OnLoadWrk" Text="Search" />
      <RadzenButton Click="@OnSaveWrk" Text="Save" />
    </RadzenStack>

  </RadzenStack>
</RadzenCard>

<RadzenRow JustifyContent="JustifyContent.Normal" AlignItems="AlignItems.Normal" class="context-body-row"  >
  <RadzenColumn Size="12" >

    <QuriDynamicGrid  ReqData=@Data AllowPaging=true />

  </RadzenColumn>
</RadzenRow>

@code {
  
  CommonCode? projectName { get; set; }
  CommonCode? SrouceName { get; set; }

  protected override async Task OnAfterRenderAsync(bool firstRender) {
    if (firstRender) {
      OnLoadWrk();
    }
  }

  public ResultInfo<Dictionary<string, object>> Data { get; set; }

  protected async Task OnLoadWrk() {
    Data = await DbCont<Dictionary<string, object>>("sp_dev_activityinfo_exec", new Dictionary<string, string>(){{"prj_rid",projectName?.Code}, {"src_rid",SrouceName?.Code}});

  StateHasChanged();
  }

  
  protected async Task OnSaveWrk() {
    MdCont<Dictionary<string, object>>("md_glue_service", new Dictionary<string, string>(){{"prj_rid",projectName?.Code}, {"src_rid",SrouceName?.Code}});
    Notify(NotificationSeverity.Info, "정보", "back ground 동작함 알아서 도니깐 이제 신경 끄셔도 됩니다.", 5000);
  }




}
