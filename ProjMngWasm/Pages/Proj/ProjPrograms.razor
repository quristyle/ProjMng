@page "/proj-program";


@inherits PageBaseComponent

<PageTitle>Jsini | Programs - @srtype?.Name</PageTitle>

<RadzenCard class="rz-my-6">
  <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" >

    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="4px">
      <QuriDropDown CodeId="projlist" @bind-Value=srtype />
    </RadzenStack>

    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="4px">
      <RadzenButton Click="@Search" Text="Search" />
    </RadzenStack>

  </RadzenStack>
</RadzenCard>



<RadzenSplitter Orientation="Orientation.Horizontal"style="height: 60vh; border: 1px solid rgba(0,0,0,.08);">



  <RadzenSplitterPane Size="30%" Min="20%" Max="80%">




        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" Wrap="FlexWrap.Wrap">


          <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
        <QuriDynamicGrid 
                         ReqData=Data 
                         @bind-SItems=SelectedItems
                         HiddenCols="pgm_name_eng,remark,reg_id,reg_dt,upt_id,upt_dt" />


        </RadzenStack>
                

          <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            Orientation

            <RadzenTextBox @bind-Value=@MenuName></RadzenTextBox>

          </RadzenStack>
          <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            같은곳 폴더
            <RadzenButton Click='@( () => MakeMenu("1") )' Text="" />

          </RadzenStack>

          <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            같은곳 폴더
            <RadzenButton Click='@( () => MakeMenu("2") )' Text="하위 폴더" />

          </RadzenStack>

          <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            같은곳 폴더
            <RadzenButton Click='@( () => MakeMenu("3") )' Text="같은곳 프로그램" />

          </RadzenStack>


          <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
            같은곳 폴더
            <RadzenButton Click='@( () => MakeMenu("4") )' Text="하위 프로그램" />

          </RadzenStack>

        </RadzenStack>


      </RadzenSplitterPane>











      <RadzenSplitterPane Size="70%" Min="20%" Max="80%" >



        <QuriDynamicGrid SaveBtnEvent=SaveBtnEventMenu
                         DeleteBtnEvent=DeleteBtnEventMenu
                         @bind-SItems=SelectedItemsMenu
                         ReqData=DataMenu
                         HiddenCols="reg_id,reg_dt,upt_id,upt_dt"
                         />


      </RadzenSplitterPane>




</RadzenSplitter>
















@code {


public IList<IDictionary<string, object>>? SelectedItems { get; set; }
public IList<IDictionary<string, object>>? SelectedItemsMenu { get; set; }
  string? FoldName { get; set; }
  string? MenuName { get; set; }

  private async Task MakeMenu( string op ) {
    
    Console.WriteLine($"MakeMenu {op} SelectedItems : {SelectedItems}");
    Console.WriteLine($"MakeMenu {op} SelectedItemsMenu : {SelectedItemsMenu}");


    if (SelectedItems == null || SelectedItemsMenu == null) {
      Notify(NotificationSeverity.Info, "Need To Choice", "프로그램과 메뉴를 선택 하세요.", 2000, false);
      return;
    }

    var req = WasmUtil.JoinDictionaries(SelectedItems.First(), new Dictionary<string, string>() { { "add_gubun", op }, { "menu_title", MenuName } });
    var req2 = WasmUtil.JoinDictionaries(req, SelectedItemsMenu.First());
    await DbSave<IDictionary<string, object>>(       "sp_dev_menu_exec", req2    );


  }







  CommonCode? srtype { get; set; }

  protected override async Task OnInitializedAsync() {
    await base.OnInitializedAsync();
   await Search();
  }


  public ResultInfo<Dictionary<string, object>>? Data { get; set; }

  async Task Search() {
    await OnLoadWrk();
    await OnLoadMenu();
  }

  protected async Task OnLoadWrk() {
    Data = await DbCont<Dictionary<string, object>>("sp_dev_program_exec", new Dictionary<string, string>() {
     { "proj_rid", srtype.Code }
    });
  }


  public ResultInfo<Dictionary<string, object>>? DataMenu { get; set; }


  protected async Task OnLoadMenu() {
    DataMenu = await DbCont<Dictionary<string, object>>("sp_dev_menu_exec", new Dictionary<string, string>() {
     { "proj_rid", srtype.Code }
    });
  }


  private async Task SaveBtnEventMenu(IDictionary<string, object> dic) {
    var req = WasmUtil.JoinDictionaries(dic, new Dictionary<string, string>() { });
    await DbSave<IDictionary<string, object>>("sp_dev_menu_exec",req);
  }

  


  private async Task DeleteBtnEventMenu(IDictionary<string, object> dic) {
    var d = WasmUtil.JoinConvert(dic);
    await DbDelete<IDictionary<string, object>>("sp_dev_menu_exec", d);
  }



  private void NoClick(MouseEventArgs args)  {

  }
}
