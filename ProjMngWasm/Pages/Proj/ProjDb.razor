@page "/projdb";
@{
  /* description : 프로젝트 목록 관리
  * title : 프로젝트 DB
      * sort : 2
      * credt : 2021-09-01
      * author : quristyle
      */
}

@inherits PageBaseComponent

<RadzenCard >
  <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" >

    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" >
      <QuriDropDown CodeId="projlist" @bind-Value=srtype IsAll=true Change=OnLoadWrk />
    </RadzenStack>

    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End">
      <RadzenButton Click="@OnLoadWrk" Text="Search" />
      <RadzenButton Click="@OnSaveWrk" Text="Save" />
    </RadzenStack>

  </RadzenStack>
</RadzenCard>



<RadzenSplitter Orientation="Orientation.Vertical" class="context-body-row" style=" border: 1px solid rgba(0,0,0,.08);">

    
  <!-- 위쪽 -->
  <RadzenSplitterPane  Size="40%" Min="10%" Max="90%">

        <QuriDynamicGrid SaveBtnEvent=SaveBtnEvent
                         DeleteBtnEvent=DeleteBtnEvent ReqData=Data SItemsChanged=OnDbInfoChange />


    </RadzenSplitterPane>
    <!-- 아래쪽 -->
    <RadzenSplitterPane Size="60%" Min="10%" Max="90%">

        
    <RadzenSplitter Orientation="Orientation.Horizontal">
        
        <!-- 왼쪽 -->
        <RadzenSplitterPane Size="40%" Min="20%" Max="80%">

                <QuriDynamicGrid ReqData=DbPropData SaveBtnEvent=SaveDBPropEvent SItemsChanged=OnDbPropChange />
        </RadzenSplitterPane>
        <!-- 오른쪽 -->
        <RadzenSplitterPane Size="60%" Min="20%" Max="80%">

                <QuriCodeEditor @ref="_editProc" />

        </RadzenSplitterPane>





        </RadzenSplitter>






    </RadzenSplitterPane>

    </RadzenSplitter>






@code {

  public CommonCode? srtype { get; set; }

  protected override async Task OnInitializedAsync() {
    await base.OnInitializedAsync();
  }

  public ResultInfo<Dictionary<string, object>>? Data { get; set; }
  public List<IDictionary<string, object>>? SelDbInfo { get; set; }


  public ResultInfo<Dictionary<string, object>>? DbPropData { get; set; }
  public IList<IDictionary<string, object>>? SelDbProp { get; set; }



  private QuriCodeEditor? _editProc;


  protected async Task OnLoadWrk() {
    Data = await DbCont<Dictionary<string, object>>("sp_projdblist", new Dictionary<string, string>() {
    { "proj_rid",  srtype?.Code ?? string.Empty }
    });
  }

  protected async Task OnSaveWrk() {
    var sp_fmt = await _editProc.GetValue();
    await DbSave<Dictionary<string, object>>("sp_dev_db_prop_exec", new Dictionary<string, string>() {
    { "db_rid",  SelDbProp.FirstOrDefault()["db_rid"].ToString() },
    { "db_prid",  SelDbProp.FirstOrDefault()["db_prid"].ToString() },
    { "db_pkey",  SelDbProp.FirstOrDefault()["db_pkey"].ToString() },
    { "db_pvalue",  sp_fmt },
    });
  }


  

  private async Task SaveBtnEvent(IDictionary<string, object> dic) {
    var req = WasmUtil.JoinDictionaries(dic, new Dictionary<string, string>() { { "stp", "sp_projdbsave" } });

    var saveobj = await DbSave<IDictionary<string, object>>("sp_projdbsave", req);
  }



  private async Task DeleteBtnEvent(IDictionary<string, object> dic) {
    var req = WasmUtil.JoinDictionaries(dic, new Dictionary<string, string>() { });

    var saveobj = await DbDelete<IDictionary<string, object>>("sp_projdbdel", req);
  }


  private async Task OnDbInfoChange(IList<IDictionary<string, object>> args) {
    DbPropData = await DbCont<Dictionary<string, object>>("sp_dev_db_prop_exec", new Dictionary<string, string>() {
    { "db_rid",  args.FirstOrDefault()["db_rid"].ToString() }
    });
  }


  private async Task OnDbPropChange(IList<IDictionary<string, object>> args) {
    SelDbProp = args;
    _editProc.SetValue(args.FirstOrDefault()["db_pvalue"].ToString());

  }

  


  private async Task SaveDBPropEvent(IDictionary<string, object> dic) {
    var req = WasmUtil.JoinDictionaries(dic, new Dictionary<string, string>() {  });

    //var saveobj = await DbSave<IDictionary<string, object>>("sp_dev_db_prop_exec", req);
  }


}
