@page "/proj-src";
@{
  /* description : 프로젝트 소스관리
  * title : Source
  * sort : 3
  * credt : 2025-03-31
  * author : quristyle
  */
}

@inherits PageBaseComponent

<RadzenCard >
  <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" >

    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="4px">
      <QuriDropDown CodeId="projlist" @bind-Value=srtype IsAll=true InitialCode="7" />
    </RadzenStack>

    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="4px">
      <RadzenButton Click="@OnLoadWrk" Text="Search" />
    </RadzenStack>

  </RadzenStack>
</RadzenCard>



<RadzenSplitter Orientation="Orientation.Vertical" class="context-body-row" style=" border: 1px solid rgba(0,0,0,.08); ">
            
  <!-- up -->
  <RadzenSplitterPane Size="30%" Min="10%" Max="90%">
    <QuriDynamicGrid SaveBtnEvent=SaveBtnEvent DeleteBtnEvent=DeleteBtnEvent RowClickEvent=OnLoadWrk_dtl ReqData=Data DropDownCols="src_comm|SOURCE_GB"  />
  </RadzenSplitterPane>
  <!-- down -->
  <RadzenSplitterPane Size="70%" Min="10%" Max="90%">
    <QuriDynamicGrid SaveBtnEvent=SaveBtnEvent_dtl DeleteBtnEvent=DeleteBtnEvent_dtl ReqData=Data_dtl />
  </RadzenSplitterPane>
</RadzenSplitter>




@code {

  public CommonCode? srtype { get; set; }

  protected override async Task OnInitializedAsync() {
    await base.OnInitializedAsync();
  }

  public ResultInfo<Dictionary<string, object>>? Data { get; set; }
  public ResultInfo<Dictionary<string, object>>? Data_dtl { get; set; }


  protected async Task OnLoadWrk() {
    Data = await DbCont<Dictionary<string, object>>("sp_dev_srcinfo_exec", new Dictionary<string, string>() {
    { "prj_rid",  srtype?.Code ?? string.Empty }
    });
  }


  protected async Task OnLoadWrk_dtl(IDictionary<string, object> seldic) {
    Data_dtl = await DbCont<Dictionary<string, object>>("sp_dev_srcinfo_dtl_exec", new Dictionary<string, string>() {
    { "src_rid",  seldic["src_rid"].ToString() }
    });
  }



  private async Task SaveBtnEvent(IDictionary<string, object> dic) {
    var req = WasmUtil.JoinDictionaries(dic, new Dictionary<string, string>() {  });

    var saveobj = await DbSave<IDictionary<string, object>>("sp_dev_srcinfo_exec", req);
  }



  private async Task DeleteBtnEvent(IDictionary<string, object> dic) {
    var req = WasmUtil.JoinDictionaries(dic, new Dictionary<string, string>() { });

    var saveobj = await DbDelete<IDictionary<string, object>>("sp_dev_srcinfo_exec", req);
  }


  
  private async Task SaveBtnEvent_dtl(IDictionary<string, object> dic) {
    var req = WasmUtil.JoinDictionaries(dic, new Dictionary<string, string>() {  });

    var saveobj = await DbSave<IDictionary<string, object>>("sp_dev_srcinfo_dtl_exec", req);
  }



  private async Task DeleteBtnEvent_dtl(IDictionary<string, object> dic) {
    var req = WasmUtil.JoinDictionaries(dic, new Dictionary<string, string>() { });

    var saveobj = await DbDelete<IDictionary<string, object>>("sp_dev_srcinfo_dtl_exec", req);
  }




}
