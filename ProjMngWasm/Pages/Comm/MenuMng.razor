@page "/menumng";
@{ 
    /* description : 메뉴관리
  * title : 메뉴관리
  * sort : 2
  * credt : 2025-06-15
  * author : quristyle
  */
      }

@inherits PageBaseComponent

      <RadzenCard >
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" >

          <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="4px">
            <RadzenTextBox @bind-Value="srtype" />
          </RadzenStack>

          <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="4px">
            <RadzenButton Click="@OnLoadWrk" Text="Search" />
          </RadzenStack>

        </RadzenStack>
      </RadzenCard>


      <RadzenRow JustifyContent="JustifyContent.Normal" AlignItems="AlignItems.Normal" class="context-body-row">
        <RadzenColumn Size="12">


          <RadzenSplitter Orientation="Orientation.Horizontal"style=" border: 1px solid rgba(0,0,0,.08); height:100%;">

            <!-- 왼쪽 -->
            <RadzenSplitterPane Size="30%" Min="10%" Max="90%">

              <QuriDynamicGrid 
              SaveBtnEvent=SaveBtnEvent 
              ReqData=@Data 
              SItemsChanged=OnMainCommChange
              HiddenCols="cm_rid,cm_prop,cm_pcd,cm_val,cm_val2,cm_val3" />
            </RadzenSplitterPane>
            <!-- 오른쪽 -->
            <RadzenSplitterPane Size="70%" Min="10%" Max="90%">

              <QuriDynamicGrid 
              SaveBtnEvent=SaveBtnEvent2 
              AddBtnEvent=AddBtnEvent2
              ReqData=@Data2
              HiddenCols="cm_rid,cm_prop" />
            </RadzenSplitterPane>
          </RadzenSplitter>

        </RadzenColumn>
      </RadzenRow>



      @code {

  public string srtype { get; set; } = "";
  public IDictionary<string, object> MainSItem { get; set; }

  protected override async Task OnAfterRenderAsync(bool firstRender) {
    if (firstRender) {
      OnLoadWrk();
    }
  }

  public ResultInfo<Dictionary<string, object>> Data { get; set; }
  public ResultInfo<Dictionary<string, object>> Data2 { get; set; }

  protected async Task OnLoadWrk() {
    Data = await DbCont<Dictionary<string, object>>("sp_devcomm_exec", new Dictionary<string, string>() {
    { "srch_type",  "main" }
    });
    StateHasChanged();
  }

  private async Task OnMainCommChange(IList<IDictionary<string, object>> args) {
    MainSItem = args.FirstOrDefault();
    Data2 = await DbCont<Dictionary<string, object>>("sp_devcomm_exec", new Dictionary<string, string>() {
    { "cm_pcd",  MainSItem["cm_cd"].ToString() }
    });
  }

  private async Task SaveBtnEvent(IDictionary<string, object> dic) {
    var saveobj = await DbSave<IDictionary<string, object>>("sp_devcomm_exec", dic);
  }
  private async Task SaveBtnEvent2(IDictionary<string, object> dic) {
    var saveobj = await DbSave<IDictionary<string, object>>("sp_devcomm_exec", dic);
  }

  private void AddBtnEvent2(IDictionary<string, object> args) {

    args["cm_pcd"] = MainSItem["cm_cd"];
    StateHasChanged();

  }
}
